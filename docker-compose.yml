version: "3.7"

services:
  ########################################################################################################
  ########################################  DATABASE SERVICES ############################################
  ########################################################################################################
  postgres:
    image: postgres:11.7-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - ~/factly/validly/postgresql:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=kratos,keto,kavach
    networks:
      - validly

  ########################################################################################################
  ############################################ IMAGE PROXY ###############################################
  ########################################################################################################
  imgproxy:
    image: darthsim/imgproxy:v2.15.0
    ports:
      - 8080:8080
    environment:
      - IMGPROXY_BASE_URL=http://minio:9000/
      - IMGPROXY_TTL=31536000
    networks:
      - validly


  ########################################################################################################
  ######################### ORY SERVICES - KRATOS, KETO AND OATHKEEPER ###################################
  ########################################################################################################
  kratos-migrate:
    depends_on:
      - postgres
    image: oryd/kratos:v0.10.1
    environment:
      - DSN=postgres://postgres:postgres@postgres:5432/kratos?sslmode=disable
    volumes:
      - type: bind
        source: ./kratos/config
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - validly

  keto-migrate:
    image: oryd/keto:v0.9.0-alpha.0
    environment:
      - DSN=postgres://postgres:postgres@postgres:5432/keto?sslmode=disable
      - LOG_LEVEL=debug
    depends_on:
      - postgres
    volumes:
      - type: bind
        source: ./keto
        target: /etc/config/keto
    # command: namespace migrate legacy -c "/etc/config/keto/keto.yml" --yes
    command: migrate up -c "/etc/config/keto/keto.yml" --yes
    restart: on-failure
    networks:
      - validly

  keto:
     depends_on:
      - keto-migrate
     image: oryd/keto:v0.9.0-alpha.0
     ports:
      - "4466:4466" # read
      - "4467:4467" # write 
      - "4468:4468" # metric
     environment:
      - LOG_LEVEL=debug
     volumes:
      - type: bind
        source: ./keto
        target: /etc/config/keto
     command: serve -c "/etc/config/keto/keto.yml"
     networks:
      - validly

  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.10.1
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    environment:
      - DSN=postgres://postgres:postgres@postgres:5432/kratos?sslmode=disable
    volumes:
      - type: bind
        source: ./kratos/config
        target: /etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev
    restart: unless-stopped
    networks:
      - validly

  oathkeeper:
    image: oryd/oathkeeper:latest-alpine
    depends_on:
      - kratos
    ports:
      - "4455:4455"
      - "4456:4456"
    environment:
      - LOG_LEVEL=debug
    volumes:
      - type: bind
        source: ./oathkeeper
        target: /etc/config/oathkeeper
    command: serve proxy -c "/etc/config/oathkeeper/.oathkeeper.yml"
    restart: on-failure
    networks:
      - validly


  ########################################################################################################
  ############################################  KAVACH ###################################################
  ########################################################################################################
  kavach-server:
    depends_on:
      - postgres
      - keto
      - kratos
      - kavach-migrate
    ports:
      - 5001:8000
    image: factly/kavach-server:0.27.4
    volumes:
      - type: bind
        source: ./volumes/kavach-server/data
        target: /app/data
    environment:
      - WAIT_HOSTS=postgres:5432, kratos:4434 , keto:4466
      - KAVACH_DATABASE_HOST=postgres
      - KAVACH_DATABASE_USER=postgres
      - KAVACH_DATABASE_PASSWORD=postgres
      - KAVACH_DATABASE_NAME=kavach
      - KAVACH_DATABASE_PORT=5432
      - KAVACH_DATABASE_SSL_MODE=disable
      - KAVACH_KETO_READ_API_URL=http://keto:4466
      - KAVACH_KETO_WRITE_API_URL=http://keto:4467
      - KAVACH_KRATOS_ADMIN_URL=http://kratos:4434
      - KAVACH_KRATOS_PUBLIC_URL=http://kratos:4433 
      - KAVACH_MODE=development
      - KAVACH_USE_SQLITE=false
      - KAVACH_SQLITE_DB_PATH=kavach.db
      - KAVACH_IMAGEPROXY_URL=http://127.0.0.1:7001
      - KAVACH_DOMAIN_NAME=http://127.0.0.1:4455/.factly/kavach/web
      - KAVACH_DYNAMIC_FROM_EMAIL='kavach'
      - KAVACH_MANDE_HOST=http://mande.factly.in
      - KAVACH_DYNAMIC_MANDE_TEMPLATE_ID=1
      - KAVACH_DYNAMIC_SENDGRID_API_KEY=SENDGRID_API_KEY
      - KAVACH_ENABLE_MULTITENANCY=true
      - KAVACH_DISABLE_REGISTRATION=false
      - KAVACH_APPLICATION_NAME=Kavach
      - KAVACH_DEFAULT_USER_EMAIL=validly@factly.in
      - KAVACH_DEFAULT_USER_PASSWORD=Data123@#
      - KAVACH_DEFAULT_ORGANISATION_NAME=FACTLYIN
      - KAVACH_ENABLE_IMGPROXY=false
      - KAVACH_BUCKET_NAME=login.factly.in
      - KAVACH_DYNAMIC_EMAIL_ENABLED=true
    restart: unless-stopped
    networks:
      - validly
  
  kavach-migrate:
    depends_on:
      - postgres
      - keto
      - kratos
    image: factly/kavach-server:0.27.4
    volumes:
      - type: bind
        source: ./volumes/kavach-server/data
        target: /app/data
    environment:
      - WAIT_HOSTS=postgres:5432, kratos:4434 , keto:4466
      - KAVACH_DATABASE_HOST=postgres
      - KAVACH_DATABASE_USER=postgres
      - KAVACH_DATABASE_PASSWORD=postgres
      - KAVACH_DATABASE_NAME=kavach
      - KAVACH_DATABASE_PORT=5432
      - KAVACH_DATABASE_SSL_MODE=disable
      - KAVACH_KETO_READ_API_URL=http://keto:4466
      - KAVACH_KETO_WRITE_API_URL=http://keto:4467
      - KAVACH_KRATOS_ADMIN_URL=http://kratos:4434
      - KAVACH_KRATOS_PUBLIC_URL=http://kratos:4433 
      - KAVACH_MODE=development
      - KAVACH_USE_SQLITE=false
      - KAVACH_SQLITE_DB_PATH=kavach.db
      - KAVACH_IMAGEPROXY_URL=http://127.0.0.1:7001
      - KAVACH_DOMAIN_NAME=http://127.0.0.1:4455/.factly/kavach/web
      - KAVACH_DYNAMIC_FROM_EMAIL='kavach'
      - KAVACH_MANDE_HOST=http://mande.factly.in
      - KAVACH_DYNAMIC_MANDE_TEMPLATE_ID=1
      - KAVACH_DYNAMIC_SENDGRID_API_KEY=SENDGRID_API_KEY
      - KAVACH_ENABLE_MULTITENANCY=false
      - KAVACH_DISABLE_REGISTRATION=false
      - KAVACH_APPLICATION_NAME=Kavach
      - KAVACH_DEFAULT_USER_EMAIL=validly@factly.in
      - KAVACH_DEFAULT_USER_PASSWORD=Data123@#
      - KAVACH_DEFAULT_ORGANISATION_NAME=FACTLYIN
      - KAVACH_ENABLE_IMGPROXY=false
      - KAVACH_BUCKET_NAME=login.factly.in
      - KAVACH_DYNAMIC_EMAIL_ENABLED=true
    entrypoint: ["/bin/sh", "-c" , "/app/kavach-server migrate && /app/kavach-server create-super-org"]
    networks:
      - validly

  kavach-web:
    image: factly/kavach-web:0.27.4-dev
    volumes:
      - type: bind
        source: ./volumes/kavach-web/config.js
        target: /app/public/config.js
    environment:
      - PUBLIC_URL=http://127.0.0.1:4455/.factly/kavach/web 
      - REACT_APP_PUBLIC_URL='http://127.0.0.1:4455/.factly/kavach/web';
      - REACT_APP_KAVACH_TITLE='FACTLY';
      - REACT_APP_COMPANION_URL='http://127.0.0.1:3020';
      - REACT_APP_API_URL='http://127.0.0.1:4455/.factly/kavach/server';
      - REACT_APP_KRATOS_PUBLIC_URL='http://127.0.0.1:4455/.ory/kratos/public';
      - REACT_APP_ENABLE_MULTITENANCY='false';
      - REACT_APP_DISABLE_REGISTRATION=false;
      - REACT_APP_REDIRECT_SINGLE_APPLICATION_USERS=true;
      - REACT_APP_LOGO_URL='https://images.factly.in/login/applications/logos/factly.png?rs:fill/h:60';
      - REACT_APP_ENABLE_IMGPROXY=false; 
    restart: unless-stopped
    networks:
      - validly


  ########################################################################################################
  #######################################  VALIDLY-STUDIO ################################################
  ########################################################################################################
  validly-studio:
    build: 
      context: ./studio
      dockerfile: Dockerfile
    environment:
      - PUBLIC_URL=http://127.0.0.1:4455/.factly/validly/studio
      - REACT_APP_KAVACH_PUBLIC_URL=http://127.0.0.1:4455/.factly/kavach/web
      - REACT_APP_KRATOS_PUBLIC_URL=http://127.0.0.1:4455/.ory/kratos/public
      - REACT_APP_VALIDLY_SERVER_URL=http://localhost:8000
      - REACT_APP_METAFACTS_SERVER_URL=http://localhost:8005
    volumes:
      - type: bind
        source: ./studio
        target: /app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - validly

  ########################################################################################################
  #######################################  MINIO #########################################################
  ########################################################################################################
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./volumes/minio/data:/export
      - ./volumes/minio/config:/root/.minio
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=password
    networks:
      - validly
    command: server --console-address :9001 /export

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    networks:
      - validly
    entrypoint: >
      /bin/sh -c "
      apk add --no-cache bash;
      wait-for-it.sh minio:9000 -- echo 'Minio is up. Creating the bucket!!';
      /usr/bin/mc config host add myminio http://minio:9000 minio password;
      /usr/bin/mc mb myminio/validly;
      /usr/bin/mc policy set download myminio/validly;
      exit 0;
      "


  ########################################################################################################
  #######################################  VALIDLY-SERVER ################################################
  ########################################################################################################
  validly-server:
    depends_on:
      - minio
    ports:
      - 8000:8000
    image: factly/validly-server:0.4.1
    command: >
      /bin/sh -c "
      uvicorn app.main:app --reload --host 0.0.0.0;
      "
    env_file:
      - validly-server.env
    networks:
      - validly

  ########################################################################################################
  #######################################  METAFACTS-SERVER ##############################################
  ########################################################################################################
  metafacts-server:
    ports:
      - 8005:8005
    image: factly/metafacts-server:latest
    command: >
      /bin/sh -c "
      uvicorn app.main:app --reload --host 0.0.0.0 --port 8005;
      "
    networks:
      - validly


networks:
  validly:
